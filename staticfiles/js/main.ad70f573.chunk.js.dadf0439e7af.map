{"version":3,"sources":["components/Loader/Loader.jsx","components/Home/Home.jsx","api.js","components/Results/Results.jsx","components/Header/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["loader","props","className","Home","departureSuggestion","this","length","departure","departureFocus","map","airport","i","onMouseEnter","changeDepartureVal","key","destinationSuggestion","destination","destinationFocus","changeDestinationVal","errors","error","err","loading","onSubmit","e","searchFlight","ref","departureRef","required","onChange","getSuggestions","target","value","onFocus","focusInDeparture","onBlur","focusOutDeparture","type","placeholder","focusInDestination","focusOutDestination","changeDepartureDate","departureDate","changeReturnDate","returnDate","changeCabinClass","cabinClass","id","changeAdult","adult","changeChildren","children","changeInfants","infants","Component","axios","create","baseURL","Results","console","log","data","results","flight","name","date","time","arrival","operating_airline","header","to","App","state","fetchFlight","api","post","getSuggestion","query","setState","get","then","res","result","submitSearch","preventDefault","alert","departure_city","destination_city","departure_date","return_date","no_of_adults","no_of_children","no_of_infants","cabin_class","history","push","catch","response","path","render","val","withRouter","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad70f573.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst loader = props => (\r\n    <div className=\"Backdrop\">\r\n        <div className=\"loader\"></div>\r\n    </div>\r\n)\r\n\r\nexport default loader;","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        let departureSuggestion = null;\r\n        if(this.props.departureSuggestion.length > 0 && this.props.departure.length > 0 && this.props.departureFocus === 1) {\r\n            departureSuggestion = <div className=\"AutoComplete\">\r\n                {this.props.departureSuggestion.map((airport, i) => {\r\n                   return <div onMouseEnter={() => this.props.changeDepartureVal(airport)} key={i}>{airport}</div>\r\n               })}\r\n            </div>\r\n        }\r\n        let destinationSuggestion = null;\r\n        if(this.props.destinationSuggestion.length > 0 && this.props.destination.length > 0 && this.props.destinationFocus === 1) {\r\n            destinationSuggestion = <div className=\"AutoComplete\">\r\n                {this.props.destinationSuggestion.map((airport, i) => {\r\n                   return <div onMouseEnter={() => this.props.changeDestinationVal(airport)} key={i}>{airport}</div>\r\n               })}\r\n            </div>\r\n        }\r\n        let errors = null;\r\n        if(this.props.error) {\r\n            errors = this.props.error.map((err, i) => {\r\n                return <p key={i} className=\"error\">{err}</p>\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"Home\">\r\n                {this.props.loading?<Loader/>:null}\r\n                <h1>Search Flight</h1>\r\n                {errors}\r\n                <form onSubmit={e => this.props.searchFlight(e)} className=\"\">\r\n                    <div className=\"FlightSearch\">\r\n                    <div className=\"FormInput\">\r\n                        <input ref={this.departureRef} required onChange={e => this.props.getSuggestions(e.target.value, 'departure')} \r\n                        value={this.props.departure}\r\n                        onFocus={() => this.props.focusInDeparture()}\r\n                        onBlur={() => this.props.focusOutDeparture()}\r\n                        type=\"text\" placeholder=\"Departure\" />\r\n                        {departureSuggestion}\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input required onChange={e => this.props.getSuggestions(e.target.value, 'destination')} \r\n                        value={this.props.destination}\r\n                        onFocus={() => this.props.focusInDestination()}\r\n                        onBlur={() => this.props.focusOutDestination()}\r\n                        type=\"text\" placeholder=\"Destination\" />\r\n                        {destinationSuggestion}\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input required onChange={e => this.props.changeDepartureDate(e.target.value)} \r\n                        value={this.props.departureDate} \r\n                        type=\"date\" placeholder=\"Departure Date\" />\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input onChange={e => this.props.changeReturnDate(e.target.value)} \r\n                        value={this.props.returnDate} \r\n                        type=\"date\" placeholder=\"Return Date\" />\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <select onChange={e => this.props.changeCabinClass(e.target.value)}\r\n                         required value={this.props.cabinClass} placeholder='select cabin class' id=\"\">\r\n                            <option value=\"\">Select Cabin Class</option>\r\n                            <option value=\"First\">First</option>\r\n                            <option value=\"Economy\">Economy</option>\r\n                            <option value=\"Premium\">Premium</option>\r\n                            <option value=\"Business\">Business</option>\r\n                            <option value=\"All\">All</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input required onChange={e => this.props.changeAdult(e.target.value)} \r\n                        value={this.props.adult} \r\n                        type=\"number\" placeholder=\"No of Adults\" />\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input required onChange={e => this.props.changeChildren(e.target.value)} \r\n                        value={this.props.children} \r\n                        type=\"number\" placeholder=\"No of Children\" />\r\n                    </div>\r\n                    <div className=\"FormInput\">\r\n                        <input required onChange={e => this.props.changeInfants(e.target.value)} \r\n                        value={this.props.infants} \r\n                        type=\"number\" placeholder=\"No of Infants\" />\r\n                    </div>\r\n                    </div>\r\n                    <br/><br/>\r\n                    <button type=\"submit\">SEARCH</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nexport default axios.create({baseURL: 'http://localhost:8000/api/'})","import React, {Component, Fragment} from 'react';\r\nimport './Results.css';\r\n\r\nclass Results extends Component {\r\n\r\n    componentDidMount() {\r\n            console.log(this.props.data)\r\n    }\r\n    render() {\r\n        let results = null;\r\n        if (this.props.data) {\r\n            results = this.props.data.map((flight, i) => {\r\n                return <Fragment key={i}>\r\n                    <div>{i+1}</div>\r\n                    <div>{flight.departure.airport.name}</div>\r\n                    <div>{flight.departure.date} / {flight.departure.time}</div>\r\n                    <div>{flight.arrival.airport.name}</div>\r\n                    <div>{flight.arrival.date} / {flight.arrival.time}</div>\r\n                    <div>{flight.operating_airline.name}</div>\r\n                </Fragment> \r\n            })\r\n        }\r\n        return (\r\n            <div className=\"Result\">\r\n                <div className=\"ResultTable\">\r\n                    <div><strong>S/N</strong></div>\r\n                    <div><strong>DEPARTURE</strong></div>\r\n                    <div><strong>DEPARTURE DATE/TIME</strong></div>\r\n                    <div><strong>ARRIVAL</strong></div>\r\n                    <div><strong>ARRIVAL DATE/TIME</strong></div>\r\n                    <div><strong>AIRLINE</strong></div>\r\n                    {results}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst header = () => (\r\n    <div className=\"Header\">\r\n        <div className=\"Logo\">Flight Search</div>\r\n        <div className=\"Links\">\r\n            <Link to='/'>Home</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default header;","import React, {Component} from 'react';\nimport './App.css';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport api from './api';\nimport Results from './components/Results/Results';\nimport Header from './components/Header/Header';\n\nclass App extends Component {\n  state = {\n    loading: false,\n    error: false,\n    data: null,\n    departureSuggestion: [],\n    destinationSuggestion: [],\n    departure: '',\n    destination: '',\n    departureFocus: 0,\n    destinationFocus: 0,\n    departureDate: '',\n    returnDate: '',\n    adult: '',\n    children: '',\n    infants: '',\n    cabinClass: ''\n  }\n  fetchFlight = () => {\n      api.post('/')\n  }\n  getSuggestion = (query, type) => {\n      if (type === 'departure'){\n          this.setState({departure: query})\n          api.get(`/get_suggestion/?q=${query}`)\n          .then(res => {\n              this.setState({departureSuggestion: res.data.result})\n            })\n        } else {\n            this.setState({destination: query})\n            api.get(`/get_suggestion/?q=${query}`)\n            .then(res => {\n                this.setState({destinationSuggestion: res.data.result})\n                })\n        }\n  }\n  submitSearch = e => {\n      e.preventDefault();\n      alert('submitted');\n      const {\n        departure,\n        destination,\n        departureDate,\n        returnDate,\n        adult,\n        children,\n        infants,\n        cabinClass\n      } = this.state;\n      const data = {\n          departure_city: departure,\n          destination_city: destination,\n          departure_date: departureDate,\n          return_date: returnDate,\n          no_of_adults: adult,\n          no_of_children: children,\n          no_of_infants: infants,\n          cabin_class: cabinClass\n      }\n      this.setState({loading: true})\n      api.post('/flight_search/', data)\n      .then(res => {\n          this.setState({loading: false, data: res.data})\n          this.props.history.push('/result')\n      })\n      .catch(err => {\n          this.setState({loading: false})\n          this.setState({error: err.response.data})\n      })\n  }\n  render () {\n    return (\n      <div className=\"App\">\n        <Header />\n          <Switch>\n                <Route path='/result' render={() => <Results \n                data={this.state.data} \n                loading={this.state.loading} \n                error={this.state.error} />} />\n                <Route path='/' render={() => <Home loading={this.state.loading} \n                departure={this.state.departure}\n                destination={this.state.destination}\n                adult={this.state.adult}\n                infants={this.state.infants}\n                children={this.state.children}\n                getSuggestions = {(val, type) => this.getSuggestion(val, type)}\n                error={this.state.error}\n                departureSuggestion={this.state.departureSuggestion}\n                destinationSuggestion={this.state.destinationSuggestion}\n                focusInDeparture={() => this.setState({departureFocus: 1})}\n                focusOutDeparture={() => this.setState({departureFocus: 0})}\n                departureFocus={this.state.departureFocus}\n                focusInDestination={() => this.setState({destinationFocus: 1})}\n                focusOutDestination={() => this.setState({destinationFocus: 0})} \n                destinationFocus={this.state.destinationFocus}\n                changeDepartureVal={(val) => this.setState({departure: val})}\n                changeDestinationVal={(val) => this.setState({destination: val})}\n                changeDepartureDate={val => this.setState({departureDate: val})}\n                changeReturnDate={val => this.setState({returnDate: val})}\n                changeAdult={val => this.setState({adult: val})}\n                changeChildren={val => this.setState({children: val})}\n                changeInfants={val => this.setState({infants: val})}\n                changeCabinClass={val => this.setState({cabinClass: val})}\n                cabinClass={this.state.cabinClass}\n                searchFlight={(e) => this.submitSearch(e)}\n                />}\n                 />\n          </Switch>\n    </div>\n  );\n}\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom';\n\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}